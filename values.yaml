# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


conf:
  keystone:
    auth_url:
    username: trove
    project_name: trove
    memcached_servers: []
    region_name:
  dns:
    account_id:
    domain_name:
    domain_id:
  az_role_mapping:
  oslo_messaging_rabbit:
    amqp_durable_queues: true

vault:
  role: k8s
  settings_secret: 'path/to/secret/in/vault'
  guestagent_conf:

api:
  port: 8779
  command:
    - trove-api
  apache:
    enabled: false
  image:
    repository: registry.rc.nectar.org.au/nectar/trove
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  gateway:
    enabled: false
    annotations: {}
    hostname: chart-example.local
    parentRefs:
      - name: default

conductor:
  name: conductor
  command:
    - trove-conductor
  image:
    repository: registry.rc.nectar.org.au/nectar/trove
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}

taskmanager:
  name: taskmanager
  command:
    - trove-taskmanager
  image:
    repository: registry.rc.nectar.org.au/nectar/trove
  replicaCount: 1
  pdb:
    enabled: false
    minAvailable: 1
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  resources: {}

job:
  db_sync:
    enabled: false

oslo_policy:
  cluster:create: 'rule:admin'
  cluster:delete: 'rule:admin'
  cluster:force_delete: 'rule:admin'
  cluster:index: 'rule:admin'
  cluster:show: 'rule:admin'
  cluster:show_instance: 'rule:admin'
  cluster:action: 'rule:admin'

image:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE

# capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []
